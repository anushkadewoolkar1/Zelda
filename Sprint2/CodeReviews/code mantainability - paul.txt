Author: Aidan Roley
Date: 3/4/2025
Sprint: 3
File name: CollisionManager.cs
Author of the .cs file: Paul
Code maintainability comments:
	
- Sorting objects by the bounding boxes before checking collisions is good because it reduces the # of unnecessary collision checks and increases performance.
- It is still possible for 2 objects to be compared twice ex: objA and objB, objB and objA, so somehow fix that (maybe a data structure ?)
- The function for determining collision side might not work for all cases since it *always* uses velocity as a factor when comparing. What if both objects are (somehow) not 
moving and have zero velocity? How will we check which side it's colliding from?
- Might want to make sure objA/objB are the correct types before checking stuff to make sure noone passed in anything weird.

Proposed Change - You could use some sort of hash data structure for collision checking to avoid checking the same 2 objects twice. All that's needed is to make a 
(C# equivalent) unordered_map that stores the same stuff as add the checked collision to it each time you check to make sure no duplicate checks happen.

 
10mins