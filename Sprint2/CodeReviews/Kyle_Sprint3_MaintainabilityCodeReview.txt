Author of Code Review: Anushka Dewoolkar
Code Review Date: 4/7/2025
Sprint Number: 4
.cs File Reviewed: LinkItemManager.cs
Author of .cs File: Kyle Dietrich
Minutes Taken for Code Review: 20 minutes
Specific comments on code quality:
-Using enums like ItemType, EnemyType, and GameState helps isolate logic
-Having dedicated methods like CreateEnemy, CreateItem, and CreateBlock increases reusability and minimizes repeated code.
-Long methods like LoadRoom() are hard to test or refactor because it mixes file parsing, data structure manipulation, and rendering state setup. Refactoring into smaller methods (e.g., FindRoomDefinition(), ClearPreviousObjects(), ParseRoomLayout()) would make the code easier to change.
- There are magic numbers even though some constants are defined (like ROOM_STARTING_POINT, SHIFT_INTO_RANGE, and room dimensions)
Hypothetical Change:
Add a new type of object that appears in rooms and can interact with the player.
To do this, you would have to change the large LoadRoom() method to detect and create NPC types by adding another case in the switch logic.
